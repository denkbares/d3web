
 FUSConfiguration:
 	"all configurations for one case"
 	provides:
 		addConfiguration
 		removeConfiguration
 		findFor(Set) -> Set
 			takes Set of Diagnosis
 			return Set of Strings (which should be IDs of CaseObject)
 
 Configuration:
 	"(Therapie)-Configuration -> Set of CaseObject-IDs"
 	provides:
 		getCaseObjectIDs -> Set of CaseObject-Ids
 		setCaseObjectIDs
 		getNode -> AbstractCNode (root of configuration tree)
 		setNode
 		matches(Set) -> boolean
 			takes Set of Diagnosis
 			return true iff Diagnosis-Set matches configuration tree
 
 CNode:
 	"node in configuration tree"
 	innerclass Type used as CNode.OR or CNode.AND
 	provides:
 		getType -> CNode.Type
 		getNodes -> Set of AbstractCNode
 		addNode
 		matches(Set) -> boolean (see below)
 		
 CLeaf
 	"leaf in configuration tree"
 	innerclass Type used as CLeaf.EXCLUDED or CLeaf.INCLUDED
 	provides:
 		getType -> CLeaf.Type
 		getDiagnosis -> Diagnosis
 		matches(Set) -> boolean (see below)
 
 semantics of "matches"
 ----------------------
 
 AND
  |-----------------------------
  |                            |
  OR                          Diagnosis Z
  |----------------|          EXCLUDED
  |                |
 Diagnosis X      Diagnosis Y
 INCLUDED         INCLUDED
 
 Set of Diagnosis: [Diagnosis X, Diagnosis A]
 
 matches = true, because Set contains
 		one of Diagnosis X and Diagnosis Y (OR ... INCLUDED ... INCLUDED)
 	and
 		not Diagnosis Z (AND Z EXCLUDED)
 
 see testKBs/fus.xml for XML-persistence
 